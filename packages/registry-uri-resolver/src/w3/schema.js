"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = void 0;
exports.schema = "### Web3API Header START ###\nscalar UInt\nscalar UInt8\nscalar UInt16\nscalar UInt32\nscalar Int\nscalar Int8\nscalar Int16\nscalar Int32\nscalar Bytes\nscalar BigInt\nscalar JSON\n\ndirective @imported(\n  uri: String!\n  namespace: String!\n  nativeType: String!\n) on OBJECT | ENUM\n\ndirective @imports(\n  types: [String!]!\n) on OBJECT\n\ndirective @capability(\n  type: String!\n  uri: String!\n  namespace: String!\n) repeatable on OBJECT\n\ndirective @enabled_interface on OBJECT\n### Web3API Header END ###\n\ntype Query implements UriResolver_Query @imports(\n  types: [\n    \"UriResolver_Query\",\n    \"UriResolver_MaybeUriOrManifest\",\n    \"Ethereum_Query\",\n    \"Ethereum_Connection\",\n    \"Ethereum_TxOverrides\",\n    \"Ethereum_StaticTxResult\",\n    \"Ethereum_TxRequest\",\n    \"Ethereum_TxReceipt\",\n    \"Ethereum_Log\",\n    \"Ethereum_EventNotification\",\n    \"Ethereum_Network\"\n  ]\n) {\n  tryResolveUri(\n    authority: String!\n    path: String!\n  ): UriResolver_MaybeUriOrManifest\n\n  getFile(\n    path: String!\n  ): Bytes\n}\n\n### Imported Queries START ###\n\ntype UriResolver_Query @imported(\n  uri: \"ens/uri-resolver.core.web3api.eth\",\n  namespace: \"UriResolver\",\n  nativeType: \"Query\"\n) {\n  tryResolveUri(\n    authority: String!\n    path: String!\n  ): UriResolver_MaybeUriOrManifest\n\n  getFile(\n    path: String!\n  ): Bytes\n}\n\ntype Ethereum_Query @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"Query\"\n) {\n  callContractView(\n    address: String!\n    method: String!\n    args: [String!]\n    connection: Ethereum_Connection\n  ): String!\n\n  callContractStatic(\n    address: String!\n    method: String!\n    args: [String!]\n    connection: Ethereum_Connection\n    txOverrides: Ethereum_TxOverrides\n  ): Ethereum_StaticTxResult!\n\n  encodeParams(\n    types: [String!]!\n    values: [String!]!\n  ): String!\n\n  encodeFunction(\n    method: String!\n    args: [String!]\n  ): String!\n\n  getSignerAddress(\n    connection: Ethereum_Connection\n  ): String!\n\n  getSignerBalance(\n    blockTag: BigInt\n    connection: Ethereum_Connection\n  ): BigInt!\n\n  getSignerTransactionCount(\n    blockTag: BigInt\n    connection: Ethereum_Connection\n  ): BigInt!\n\n  getGasPrice(\n    connection: Ethereum_Connection\n  ): BigInt!\n\n  estimateTransactionGas(\n    tx: Ethereum_TxRequest!\n    connection: Ethereum_Connection\n  ): BigInt!\n\n  estimateContractCallGas(\n    address: String!\n    method: String!\n    args: [String!]\n    connection: Ethereum_Connection\n    txOverrides: Ethereum_TxOverrides\n  ): BigInt!\n\n  checkAddress(\n    address: String!\n  ): Boolean!\n\n  toWei(\n    eth: String!\n  ): BigInt!\n\n  toEth(\n    wei: BigInt!\n  ): String!\n\n  awaitTransaction(\n    txHash: String!\n    confirmations: UInt32!\n    timeout: UInt32!\n    connection: Ethereum_Connection\n  ): Ethereum_TxReceipt!\n\n  waitForEvent(\n    address: String!\n    event: String!\n    args: [String!]\n    timeout: UInt32\n    connection: Ethereum_Connection\n  ): Ethereum_EventNotification!\n\n  getNetwork(\n    connection: Ethereum_Connection\n  ): Ethereum_Network!\n}\n\n### Imported Queries END ###\n\n### Imported Objects START ###\n\ntype UriResolver_MaybeUriOrManifest @imported(\n  uri: \"ens/uri-resolver.core.web3api.eth\",\n  namespace: \"UriResolver\",\n  nativeType: \"MaybeUriOrManifest\"\n) {\n  uri: String\n  manifest: String\n}\n\ntype Ethereum_Connection @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"Connection\"\n) {\n  node: String\n  networkNameOrChainId: String\n}\n\ntype Ethereum_TxOverrides @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"TxOverrides\"\n) {\n  gasLimit: BigInt\n  gasPrice: BigInt\n  value: BigInt\n}\n\ntype Ethereum_StaticTxResult @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"StaticTxResult\"\n) {\n  result: String!\n  error: Boolean!\n}\n\ntype Ethereum_TxRequest @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"TxRequest\"\n) {\n  to: String\n  from: String\n  nonce: UInt32\n  gasLimit: BigInt\n  gasPrice: BigInt\n  data: String\n  value: BigInt\n  chainId: UInt32\n  type: UInt32\n}\n\ntype Ethereum_TxReceipt @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"TxReceipt\"\n) {\n  to: String!\n  from: String!\n  contractAddress: String!\n  transactionIndex: UInt32!\n  root: String\n  gasUsed: BigInt!\n  logsBloom: String!\n  transactionHash: String!\n  logs: [Ethereum_Log!]!\n  blockNumber: BigInt!\n  blockHash: String!\n  confirmations: UInt32!\n  cumulativeGasUsed: BigInt!\n  effectiveGasPrice: BigInt!\n  byzantium: Boolean!\n  type: UInt32!\n  status: UInt32\n}\n\ntype Ethereum_Log @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"Log\"\n) {\n  blockNumber: BigInt!\n  blockHash: String!\n  transactionIndex: UInt32!\n  removed: Boolean!\n  address: String!\n  data: String!\n  topics: [String!]!\n  transactionHash: String!\n  logIndex: UInt32!\n}\n\ntype Ethereum_EventNotification @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"EventNotification\"\n) {\n  data: String!\n  address: String!\n  log: Ethereum_Log!\n}\n\ntype Ethereum_Network @imported(\n  uri: \"ens/ethereum.web3api.eth\",\n  namespace: \"Ethereum\",\n  nativeType: \"Network\"\n) {\n  name: String!\n  chainId: Int!\n  ensAddress: String\n}\n\n### Imported Objects END ###\n";
//# sourceMappingURL=schema.js.map