/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EnsLink, EnsLinkInterface } from "../EnsLink";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ENS",
        name: "_ens",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
    ],
    name: "getPolywrapOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bf2380380610bf28339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b610ad2806101206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806331ac1d0d14610030575b600080fd5b61004a6004803603810190610045919061062e565b610060565b6040516100579190610712565b60405180910390f35b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf846040518263ffffffff1660e01b81526004016100bc919061072d565b60206040518083038186803b1580156100d457600080fd5b505afa1580156100e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010c9190610605565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561017e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017590610778565b60405180910390fd5b60008190506102508173ffffffffffffffffffffffffffffffffffffffff166359d1d43c866040518060400160405280600e81526020017f706f6c79777261702d6f776e65720000000000000000000000000000000000008152506040518363ffffffff1660e01b81526004016101f6929190610748565b60006040518083038186803b15801561020e57600080fd5b505afa158015610222573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061024b9190610657565b610259565b92505050919050565b600080829050600080806000600290505b602a811015610566576101008461028191906108aa565b93508481815181106102bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c60ff169250846001826102dd9190610854565b81518110610314577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff1610158015610365575060668373ffffffffffffffffffffffffffffffffffffffff1611155b1561037e5760578361037791906108f8565b925061042a565b60418373ffffffffffffffffffffffffffffffffffffffff16101580156103bc575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156103d5576037836103ce91906108f8565b9250610429565b60308373ffffffffffffffffffffffffffffffffffffffff1610158015610413575060398373ffffffffffffffffffffffffffffffffffffffff1611155b156104285760308361042591906108f8565b92505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff1610158015610468575060668273ffffffffffffffffffffffffffffffffffffffff1611155b156104815760578261047a91906108f8565b915061052d565b60418273ffffffffffffffffffffffffffffffffffffffff16101580156104bf575060468273ffffffffffffffffffffffffffffffffffffffff1611155b156104d8576037826104d191906108f8565b915061052c565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610516575060398273ffffffffffffffffffffffffffffffffffffffff1611155b1561052b5760308261052891906108f8565b91505b5b5b8160108461053b91906108aa565b610545919061080a565b84610550919061080a565b935060028161055f9190610854565b905061026a565b5082945050505050919050565b6000610586610581846107bd565b610798565b90508281526020810184848401111561059e57600080fd5b6105a9848285610972565b509392505050565b6000815190506105c081610a6e565b92915050565b6000813590506105d581610a85565b92915050565b600082601f8301126105ec57600080fd5b81516105fc848260208601610573565b91505092915050565b60006020828403121561061757600080fd5b6000610625848285016105b1565b91505092915050565b60006020828403121561064057600080fd5b600061064e848285016105c6565b91505092915050565b60006020828403121561066957600080fd5b600082015167ffffffffffffffff81111561068357600080fd5b61068f848285016105db565b91505092915050565b6106a18161092c565b82525050565b6106b08161093e565b82525050565b60006106c1826107ee565b6106cb81856107f9565b93506106db818560208601610972565b6106e481610a34565b840191505092915050565b60006106fc6010836107f9565b915061070782610a45565b602082019050919050565b60006020820190506107276000830184610698565b92915050565b600060208201905061074260008301846106a7565b92915050565b600060408201905061075d60008301856106a7565b818103602083015261076f81846106b6565b90509392505050565b60006020820190508181036000830152610791816106ef565b9050919050565b60006107a26107b3565b90506107ae82826109a5565b919050565b6000604051905090565b600067ffffffffffffffff8211156107d8576107d7610a05565b5b6107e182610a34565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061081582610948565b915061082083610948565b92508273ffffffffffffffffffffffffffffffffffffffff03821115610849576108486109d6565b5b828201905092915050565b600061085f82610968565b915061086a83610968565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561089f5761089e6109d6565b5b828201905092915050565b60006108b582610948565b91506108c083610948565b92508173ffffffffffffffffffffffffffffffffffffffff04831182151516156108ed576108ec6109d6565b5b828202905092915050565b600061090382610948565b915061090e83610948565b925082821015610921576109206109d6565b5b828203905092915050565b600061093782610948565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610990578082015181840152602081019050610975565b8381111561099f576000848401525b50505050565b6109ae82610a34565b810181811067ffffffffffffffff821117156109cd576109cc610a05565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5265736f6c766572206e6f742073657400000000000000000000000000000000600082015250565b610a778161092c565b8114610a8257600080fd5b50565b610a8e8161093e565b8114610a9957600080fd5b5056fea2646970667358221220d3430a2b5ccc1f2ca82634855d20538d045c37dd9061b66e976c2217ceb358e564736f6c63430008040033";

export class EnsLink__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _ens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EnsLink> {
    return super.deploy(_ens, overrides || {}) as Promise<EnsLink>;
  }
  getDeployTransaction(
    _ens: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ens, overrides || {});
  }
  attach(address: string): EnsLink {
    return super.attach(address) as EnsLink;
  }
  connect(signer: Signer): EnsLink__factory {
    return super.connect(signer) as EnsLink__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnsLinkInterface {
    return new utils.Interface(_abi) as EnsLinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EnsLink {
    return new Contract(address, _abi, signerOrProvider) as EnsLink;
  }
}
