/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnershipBridgeLinkMock,
  OwnershipBridgeLinkMockInterface,
} from "../OwnershipBridgeLinkMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "blockchainName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeChainId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageOwnershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "receiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "relayOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayOwnershipGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
    ],
    name: "updateBlockchainName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
    ],
    name: "updateBridgeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeLink",
        type: "address",
      },
    ],
    name: "updateBridgeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
    ],
    name: "updatePackageOwnershipManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "updateRelayOwnershipGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cc638038062001cc68339818101604052810190620000379190620005dc565b84848484846200005185858585856200006160201b60201c565b505050505050505050506200079d565b600060019054906101000a900460ff168062000088575060008054906101000a900460ff16155b620000ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c19062000685565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200011b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200012b620001ec60201b60201c565b85606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836068819055508260698190555081606a819055508015620001e45760008060016101000a81548160ff0219169083151502179055505b505050505050565b600060019054906101000a900460ff168062000213575060008054906101000a900460ff16155b62000255576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200024c9062000685565b60405180910390fd5b60008060019054906101000a900460ff161590508015620002a6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620002b6620002eb60201b60201c565b620002c6620003ca60201b60201c565b8015620002e85760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168062000312575060008054906101000a900460ff16155b62000354576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034b9062000685565b60405180910390fd5b60008060019054906101000a900460ff161590508015620003a5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620003c75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620003f1575060008054906101000a900460ff16155b62000433576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200042a9062000685565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000484576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620004a462000498620004c960201b60201c565b620004d160201b60201c565b8015620004c65760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620005a8816200074f565b92915050565b600081519050620005bf8162000769565b92915050565b600081519050620005d68162000783565b92915050565b600080600080600060a08688031215620005f557600080fd5b6000620006058882890162000597565b9550506020620006188882890162000597565b94505060406200062b88828901620005ae565b93505060606200063e88828901620005ae565b92505060806200065188828901620005c5565b9150509295509295909350565b60006200066d602e83620006a7565b91506200067a8262000700565b604082019050919050565b60006020820190508181036000830152620006a0816200065e565b9050919050565b600082825260208201905092915050565b6000620006c582620006d6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6200075a81620006b8565b81146200076657600080fd5b50565b6200077481620006cc565b81146200078057600080fd5b50565b6200078e81620006f6565b81146200079a57600080fd5b50565b61151980620007ad6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063d788018111610071578063d788018114610281578063e78cea921461029d578063ec9f4e5c146102bb578063f2fde38b146102d7578063fbe972d8146102f357610116565b80638da5cb5b1461020b578063c97a51bd14610229578063cef79e2414610245578063cf9cdb251461026357610116565b80636eb38212116100e95780636eb382121461018d578063715018a6146101a957806372576767146101b357806373e7d117146101d157806375ec7627146101ef57610116565b80630d9f552e1461011b5780634c8d9af1146101375780635310b5611461015557806354576c2614610171575b600080fd5b6101356004803603810190610130919061107c565b61030f565b005b61013f6103cf565b60405161014c9190611253565b60405180910390f35b61016f600480360381019061016a9190611145565b6103f5565b005b61018b6004803603810190610186919061111c565b610513565b005b6101a760048036038101906101a2919061107c565b610599565b005b6101b1610659565b005b6101bb6106e1565b6040516101c8919061126e565b60405180910390f35b6101d96106e7565b6040516101e69190611365565b60405180910390f35b61020960048036038101906102049190611194565b6106ed565b005b610213610773565b6040516102209190611253565b60405180910390f35b610243600480360381019061023e919061111c565b61079d565b005b61024d610823565b60405161025a9190611253565b60405180910390f35b61026b610849565b604051610278919061126e565b60405180910390f35b61029b60048036038101906102969190611145565b61084f565b005b6102a5610969565b6040516102b29190611253565b60405180910390f35b6102d560048036038101906102d091906110a5565b61098f565b005b6102f160048036038101906102ec919061107c565b610b0c565b005b61030d6004803603810190610308919061107c565b610c04565b005b610317610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610335610773565b73ffffffffffffffffffffffffffffffffffffffff161461038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038290611345565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610479577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7da1cd66068548585856040518563ffffffff1660e01b81526004016104dc94939291906112c0565b600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b50505050505050565b61051b610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610539610773565b73ffffffffffffffffffffffffffffffffffffffff161461058f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058690611345565b60405180910390fd5b8060688190555050565b6105a1610cc4565b73ffffffffffffffffffffffffffffffffffffffff166105bf610773565b73ffffffffffffffffffffffffffffffffffffffff1614610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060c90611345565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610661610cc4565b73ffffffffffffffffffffffffffffffffffffffff1661067f610773565b73ffffffffffffffffffffffffffffffffffffffff16146106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc90611345565b60405180910390fd5b6106df6000610ccc565b565b60685481565b606a5481565b6106f5610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610713610773565b73ffffffffffffffffffffffffffffffffffffffff1614610769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076090611345565b60405180910390fd5b80606a8190555050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107a5610cc4565b73ffffffffffffffffffffffffffffffffffffffff166107c3610773565b73ffffffffffffffffffffffffffffffffffffffff1614610819576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081090611345565b60405180910390fd5b8060698190555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60695481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108d3577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635310b5618484846040518463ffffffff1660e01b815260040161093293929190611289565b600060405180830381600087803b15801561094c57600080fd5b505af1158015610960573d6000803e3d6000fd5b50505050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806109b5575060008054906101000a900460ff16155b6109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611325565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a44576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610a4c610d92565b85606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836068819055508260698190555081606a819055508015610b045760008060016101000a81548160ff0219169083151502179055505b505050505050565b610b14610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610b32610773565b73ffffffffffffffffffffffffffffffffffffffff1614610b88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7f90611345565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bef90611305565b60405180910390fd5b610c0181610ccc565b50565b610c0c610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610c2a610773565b73ffffffffffffffffffffffffffffffffffffffff1614610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7790611345565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610db8575060008054906101000a900460ff16155b610df7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dee90611325565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e47576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e4f610e7b565b610e57610f54565b8015610e785760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610ea1575060008054906101000a900460ff16155b610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed790611325565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f30576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f515760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f7a575060008054906101000a900460ff16155b610fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb090611325565b60405180910390fd5b60008060019054906101000a900460ff161590508015611009576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611019611014610cc4565b610ccc565b801561103a5760008060016101000a81548160ff0219169083151502179055505b50565b60008135905061104c8161149e565b92915050565b600081359050611061816114b5565b92915050565b600081359050611076816114cc565b92915050565b60006020828403121561108e57600080fd5b600061109c8482850161103d565b91505092915050565b600080600080600060a086880312156110bd57600080fd5b60006110cb8882890161103d565b95505060206110dc8882890161103d565b94505060406110ed88828901611052565b93505060606110fe88828901611052565b925050608061110f88828901611067565b9150509295509295909350565b60006020828403121561112e57600080fd5b600061113c84828501611052565b91505092915050565b60008060006060848603121561115a57600080fd5b600061116886828701611052565b935050602061117986828701611052565b925050604061118a8682870161103d565b9150509250925092565b6000602082840312156111a657600080fd5b60006111b484828501611067565b91505092915050565b6111c681611391565b82525050565b6111d5816113a3565b82525050565b60006111e8602683611380565b91506111f3826113d7565b604082019050919050565b600061120b602e83611380565b915061121682611426565b604082019050919050565b600061122e602083611380565b915061123982611475565b602082019050919050565b61124d816113cd565b82525050565b600060208201905061126860008301846111bd565b92915050565b600060208201905061128360008301846111cc565b92915050565b600060608201905061129e60008301866111cc565b6112ab60208301856111cc565b6112b860408301846111bd565b949350505050565b60006080820190506112d560008301876111cc565b6112e260208301866111cc565b6112ef60408301856111cc565b6112fc60608301846111bd565b95945050505050565b6000602082019050818103600083015261131e816111db565b9050919050565b6000602082019050818103600083015261133e816111fe565b9050919050565b6000602082019050818103600083015261135e81611221565b9050919050565b600060208201905061137a6000830184611244565b92915050565b600082825260208201905092915050565b600061139c826113ad565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6114a781611391565b81146114b257600080fd5b50565b6114be816113a3565b81146114c957600080fd5b50565b6114d5816113cd565b81146114e057600080fd5b5056fea2646970667358221220200126c268d7cc23ae8ff1716fda60f54f02370efcc66de6bfeb23f91d8d049564736f6c63430008040033";

export class OwnershipBridgeLinkMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnershipBridgeLinkMock> {
    return super.deploy(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    ) as Promise<OwnershipBridgeLinkMock>;
  }
  getDeployTransaction(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    );
  }
  attach(address: string): OwnershipBridgeLinkMock {
    return super.attach(address) as OwnershipBridgeLinkMock;
  }
  connect(signer: Signer): OwnershipBridgeLinkMock__factory {
    return super.connect(signer) as OwnershipBridgeLinkMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipBridgeLinkMockInterface {
    return new utils.Interface(_abi) as OwnershipBridgeLinkMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnershipBridgeLinkMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnershipBridgeLinkMock;
  }
}
