/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VerificationRootBridgeLinkMock,
  VerificationRootBridgeLinkMockInterface,
} from "../VerificationRootBridgeLinkMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayVerificationRootGasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeChainId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayVerificationRootGasLimit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verificationRoot",
        type: "bytes32",
      },
    ],
    name: "receiveVerificationRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "verificationRoot",
        type: "bytes32",
      },
    ],
    name: "relayVerificationRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayVerificationRootGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
    ],
    name: "updateBridgeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeLink",
        type: "address",
      },
    ],
    name: "updateBridgeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayVerificationRootGasLimit",
        type: "uint256",
      },
    ],
    name: "updateRelayVerificationRootGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verificationRootRelayer",
        type: "address",
      },
    ],
    name: "updateVerificationRootRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_versionVerificationManager",
        type: "address",
      },
    ],
    name: "updateVersionVerificationManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verificationRootRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionVerificationManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b5538038062001b5583398181016040528101906200003791906200058a565b8282826200004d8383836200005960201b60201c565b5050505050506200071f565b600060019054906101000a900460ff168062000080575060008054906101000a900460ff16155b620000c2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b99062000607565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000113576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620001236200019a60201b60201c565b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260698190555081606a819055508015620001945760008060016101000a81548160ff0219169083151502179055505b50505050565b600060019054906101000a900460ff1680620001c1575060008054906101000a900460ff16155b62000203576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001fa9062000607565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000254576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620002646200029960201b60201c565b620002746200037860201b60201c565b8015620002965760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620002c0575060008054906101000a900460ff16155b62000302576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f99062000607565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000353576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620003755760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806200039f575060008054906101000a900460ff16155b620003e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003d89062000607565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000432576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b62000452620004466200047760201b60201c565b6200047f60201b60201c565b8015620004745760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200055681620006d1565b92915050565b6000815190506200056d81620006eb565b92915050565b600081519050620005848162000705565b92915050565b600080600060608486031215620005a057600080fd5b6000620005b08682870162000545565b9350506020620005c3868287016200055c565b9250506040620005d68682870162000573565b9150509250925092565b6000620005ef602e8362000629565b9150620005fc8262000682565b604082019050919050565b600060208201905081810360008301526200062281620005e0565b9050919050565b600082825260208201905092915050565b6000620006478262000658565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b620006dc816200063a565b8114620006e857600080fd5b50565b620006f6816200064e565b81146200070257600080fd5b50565b620007108162000678565b81146200071c57600080fd5b50565b611426806200072f6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637cc41844116100a2578063c97a51bd11610071578063c97a51bd1461027d578063cf9cdb2514610299578063e78cea92146102b7578063f2fde38b146102d5578063f9e5eafd146102f157610116565b80637cc41844146102075780638da5cb5b146102255780639bd6473f14610243578063c18a0c401461025f57610116565b80636113c1bd116100e95780636113c1bd1461018d578063684560a2146101a95780636d140f00146101c55780636eb38212146101e1578063715018a6146101fd57610116565b80630d9f552e1461011b5780630e4c98071461013757806335d7d56a146101535780634c8d9af11461016f575b600080fd5b6101356004803603810190610130919061107c565b61030f565b005b610151600480360381019061014c919061107c565b6103cf565b005b61016d6004803603810190610168919061111d565b61048f565b005b610177610515565b60405161018491906111dc565b60405180910390f35b6101a760048036038101906101a2919061107c565b61053b565b005b6101c360048036038101906101be91906110a5565b6105fb565b005b6101df60048036038101906101da91906110f4565b61072e565b005b6101fb60048036038101906101f6919061107c565b610842565b005b610205610902565b005b61020f61098a565b60405161021c91906111dc565b60405180910390f35b61022d6109b0565b60405161023a91906111dc565b60405180910390f35b61025d600480360381019061025891906110f4565b6109da565b005b610267610aee565b6040516102749190611272565b60405180910390f35b610297600480360381019061029291906110f4565b610af4565b005b6102a1610b7a565b6040516102ae91906111f7565b60405180910390f35b6102bf610b80565b6040516102cc91906111dc565b60405180910390f35b6102ef60048036038101906102ea919061107c565b610ba6565b005b6102f9610c9e565b60405161030691906111dc565b60405180910390f35b610317610cc4565b73ffffffffffffffffffffffffffffffffffffffff166103356109b0565b73ffffffffffffffffffffffffffffffffffffffff161461038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038290611252565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103d7610cc4565b73ffffffffffffffffffffffffffffffffffffffff166103f56109b0565b73ffffffffffffffffffffffffffffffffffffffff161461044b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044290611252565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610497610cc4565b73ffffffffffffffffffffffffffffffffffffffff166104b56109b0565b73ffffffffffffffffffffffffffffffffffffffff161461050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290611252565b60405180910390fd5b80606a8190555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610543610cc4565b73ffffffffffffffffffffffffffffffffffffffff166105616109b0565b73ffffffffffffffffffffffffffffffffffffffff16146105b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ae90611252565b60405180910390fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060019054906101000a900460ff1680610621575060008054906101000a900460ff16155b610660576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065790611232565b60405180910390fd5b60008060019054906101000a900460ff1615905080156106b0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6106b8610ccc565b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260698190555081606a8190555080156107285760008060016101000a81548160ff0219169083151502179055505b50505050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343ed751d826040518263ffffffff1660e01b815260040161080d91906111f7565b600060405180830381600087803b15801561082757600080fd5b505af115801561083b573d6000803e3d6000fd5b5050505050565b61084a610cc4565b73ffffffffffffffffffffffffffffffffffffffff166108686109b0565b73ffffffffffffffffffffffffffffffffffffffff16146108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b590611252565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61090a610cc4565b73ffffffffffffffffffffffffffffffffffffffff166109286109b0565b73ffffffffffffffffffffffffffffffffffffffff161461097e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097590611252565b60405180910390fd5b6109886000610db5565b565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636d140f00826040518263ffffffff1660e01b8152600401610ab991906111f7565b600060405180830381600087803b158015610ad357600080fd5b505af1158015610ae7573d6000803e3d6000fd5b5050505050565b606a5481565b610afc610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610b1a6109b0565b73ffffffffffffffffffffffffffffffffffffffff1614610b70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6790611252565b60405180910390fd5b8060698190555050565b60695481565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bae610cc4565b73ffffffffffffffffffffffffffffffffffffffff16610bcc6109b0565b73ffffffffffffffffffffffffffffffffffffffff1614610c22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1990611252565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990611212565b60405180910390fd5b610c9b81610db5565b50565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600060019054906101000a900460ff1680610cf2575060008054906101000a900460ff16155b610d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2890611232565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d81576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d89610e7b565b610d91610f54565b8015610db25760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610ea1575060008054906101000a900460ff16155b610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed790611232565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f30576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f515760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f7a575060008054906101000a900460ff16155b610fb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb090611232565b60405180910390fd5b60008060019054906101000a900460ff161590508015611009576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611019611014610cc4565b610db5565b801561103a5760008060016101000a81548160ff0219169083151502179055505b50565b60008135905061104c816113ab565b92915050565b600081359050611061816113c2565b92915050565b600081359050611076816113d9565b92915050565b60006020828403121561108e57600080fd5b600061109c8482850161103d565b91505092915050565b6000806000606084860312156110ba57600080fd5b60006110c88682870161103d565b93505060206110d986828701611052565b92505060406110ea86828701611067565b9150509250925092565b60006020828403121561110657600080fd5b600061111484828501611052565b91505092915050565b60006020828403121561112f57600080fd5b600061113d84828501611067565b91505092915050565b61114f8161129e565b82525050565b61115e816112b0565b82525050565b600061117160268361128d565b915061117c826112e4565b604082019050919050565b6000611194602e8361128d565b915061119f82611333565b604082019050919050565b60006111b760208361128d565b91506111c282611382565b602082019050919050565b6111d6816112da565b82525050565b60006020820190506111f16000830184611146565b92915050565b600060208201905061120c6000830184611155565b92915050565b6000602082019050818103600083015261122b81611164565b9050919050565b6000602082019050818103600083015261124b81611187565b9050919050565b6000602082019050818103600083015261126b816111aa565b9050919050565b600060208201905061128760008301846111cd565b92915050565b600082825260208201905092915050565b60006112a9826112ba565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6113b48161129e565b81146113bf57600080fd5b50565b6113cb816112b0565b81146113d657600080fd5b50565b6113e2816112da565b81146113ed57600080fd5b5056fea26469706673582212204d7e3930768c4eac9cdcdd8555afea0cbb8814c32b46d85e5320d2a34ac8e3f464736f6c63430008040033";

export class VerificationRootBridgeLinkMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _bridge: string,
    _bridgeChainId: BytesLike,
    _relayVerificationRootGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerificationRootBridgeLinkMock> {
    return super.deploy(
      _bridge,
      _bridgeChainId,
      _relayVerificationRootGasLimit,
      overrides || {}
    ) as Promise<VerificationRootBridgeLinkMock>;
  }
  getDeployTransaction(
    _bridge: string,
    _bridgeChainId: BytesLike,
    _relayVerificationRootGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _bridge,
      _bridgeChainId,
      _relayVerificationRootGasLimit,
      overrides || {}
    );
  }
  attach(address: string): VerificationRootBridgeLinkMock {
    return super.attach(address) as VerificationRootBridgeLinkMock;
  }
  connect(signer: Signer): VerificationRootBridgeLinkMock__factory {
    return super.connect(signer) as VerificationRootBridgeLinkMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerificationRootBridgeLinkMockInterface {
    return new utils.Interface(_abi) as VerificationRootBridgeLinkMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerificationRootBridgeLinkMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerificationRootBridgeLinkMock;
  }
}
