/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PolywrapRegistrar,
  PolywrapRegistrarInterface,
} from "../PolywrapRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "ManagerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "ManagerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "addManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "ownerOrManager",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "managers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "majorVersion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minorVersion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "patchVersion",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "packageLocation",
        type: "string",
      },
    ],
    name: "proposeVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "removeManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "updateRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_votingMachine",
        type: "address",
      },
    ],
    name: "updateVotingMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingMachine",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bf338038062001bf3833981810160405281019062000037919062000544565b8062000049816200005160201b60201c565b505062000667565b600060019054906101000a900460ff168062000078575060008054906101000a900460ff16155b620000ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000b19062000597565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200010b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200011b6200018260201b60201c565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156200017e5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680620001a9575060008054906101000a900460ff16155b620001eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e29062000597565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200023c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200024c6200028160201b60201c565b6200025c6200036060201b60201c565b80156200027e5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620002a8575060008054906101000a900460ff16155b620002ea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002e19062000597565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200033b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156200035d5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168062000387575060008054906101000a900460ff16155b620003c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c09062000597565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200041a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200043a6200042e6200045f60201b60201c565b6200046760201b60201c565b80156200045c5760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200053e816200064d565b92915050565b6000602082840312156200055757600080fd5b600062000567848285016200052d565b91505092915050565b60006200057f602e83620005b9565b91506200058c82620005fe565b604082019050919050565b60006020820190508181036000830152620005b28162000570565b9050919050565b600082825260208201905092915050565b6000620005d782620005de565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6200065881620005ca565b81146200066457600080fd5b50565b61157c80620006776000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80637b1039991161008c578063b0b052c211610066578063b0b052c2146101ec578063b21aa96c14610208578063c4d66de814610224578063f2fde38b14610240576100cf565b80637b103999146101805780638da5cb5b1461019e578063956db465146101bc576100cf565b80631a5da6c8146100d45780632d33d2e3146100f05780633edf7ca11461010c57806354676f2c1461012a578063684efdfd1461015a578063715018a614610176575b600080fd5b6100ee60048036038101906100e99190610f5a565b61025c565b005b61010a60048036038101906101059190610f5a565b61031c565b005b6101146103dc565b60405161012191906111f2565b60405180910390f35b610144600480360381019061013f9190610fac565b610402565b604051610151919061120d565b60405180910390f35b610174600480360381019061016f9190611011565b610422565b005b61017e6104c9565b005b610188610551565b60405161019591906111f2565b60405180910390f35b6101a6610577565b6040516101b391906111f2565b60405180910390f35b6101d660048036038101906101d19190610fd5565b6105a1565b6040516101e3919061120d565b60405180910390f35b61020660048036038101906102019190610fd5565b610640565b005b610222600480360381019061021d9190610fd5565b61075a565b005b61023e60048036038101906102399190610f5a565b610874565b005b61025a60048036038101906102559190610f5a565b610997565b005b610264610a8f565b73ffffffffffffffffffffffffffffffffffffffff16610282610577565b73ffffffffffffffffffffffffffffffffffffffff16146102d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cf9061130d565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610324610a8f565b73ffffffffffffffffffffffffffffffffffffffff16610342610577565b73ffffffffffffffffffffffffffffffffffffffff1614610398576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038f9061130d565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60676020528060005260406000206000915054906101000a900460ff1681565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663db45078b888888888888336040518863ffffffff1660e01b815260040161048e9796959493929190611243565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b5050505050505050505050565b6104d1610a8f565b73ffffffffffffffffffffffffffffffffffffffff166104ef610577565b73ffffffffffffffffffffffffffffffffffffffff1614610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c9061130d565b60405180910390fd5b61054f6000610a97565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008083836040516020016105b79291906111c6565b6040516020818303038152906040528051906020012090506067600082815260200190815260200160002060009054906101000a900460ff16156105ff57600191505061063a565b8273ffffffffffffffffffffffffffffffffffffffff1661061f85610b5d565b73ffffffffffffffffffffffffffffffffffffffff16149150505b92915050565b813373ffffffffffffffffffffffffffffffffffffffff1661066182610b5d565b73ffffffffffffffffffffffffffffffffffffffff16146106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae906112cd565b60405180910390fd5b600083836040516020016106cc9291906111c6565b60405160208183030381529060405280519060200120905060016067600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff16847fe46710533b73e7bc8e141ac9ce789902221e6df8529e50ffafa7084c7461dd9f60405160405180910390a350505050565b813373ffffffffffffffffffffffffffffffffffffffff1661077b82610b5d565b73ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c8906112cd565b60405180910390fd5b600083836040516020016107e69291906111c6565b60405160208183030381529060405280519060200120905060006067600083815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff16847f09f3834f8c364f78dd28fd9b79eefacfae7a3d41e6f9008d88babfd22bd1f24960405160405180910390a350505050565b600060019054906101000a900460ff168061089a575060008054906101000a900460ff16155b6108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d0906112ed565b60405180910390fd5b60008060019054906101000a900460ff161590508015610929576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610931610c11565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156109935760008060016101000a81548160ff0219169083151502179055505b5050565b61099f610a8f565b73ffffffffffffffffffffffffffffffffffffffff166109bd610577565b73ffffffffffffffffffffffffffffffffffffffff1614610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a9061130d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a906112ad565b60405180910390fd5b610a8c81610a97565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663427a94d4836040518263ffffffff1660e01b8152600401610bba9190611228565b60206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190610f83565b9050919050565b600060019054906101000a900460ff1680610c37575060008054906101000a900460ff16155b610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d906112ed565b60405180910390fd5b60008060019054906101000a900460ff161590508015610cc6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610cce610cfa565b610cd6610dd3565b8015610cf75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d20575060008054906101000a900460ff16155b610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d56906112ed565b60405180910390fd5b60008060019054906101000a900460ff161590508015610daf576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610dd05760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610df9575060008054906101000a900460ff16155b610e38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2f906112ed565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e88576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e98610e93610a8f565b610a97565b8015610eb95760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610ecb81611501565b92915050565b600081519050610ee081611501565b92915050565b600081359050610ef581611518565b92915050565b60008083601f840112610f0d57600080fd5b8235905067ffffffffffffffff811115610f2657600080fd5b602083019150836001820283011115610f3e57600080fd5b9250929050565b600081359050610f548161152f565b92915050565b600060208284031215610f6c57600080fd5b6000610f7a84828501610ebc565b91505092915050565b600060208284031215610f9557600080fd5b6000610fa384828501610ed1565b91505092915050565b600060208284031215610fbe57600080fd5b6000610fcc84828501610ee6565b91505092915050565b60008060408385031215610fe857600080fd5b6000610ff685828601610ee6565b925050602061100785828601610ebc565b9150509250929050565b60008060008060008060a0878903121561102a57600080fd5b600061103889828a01610ee6565b965050602061104989828a01610f45565b955050604061105a89828a01610f45565b945050606061106b89828a01610f45565b935050608087013567ffffffffffffffff81111561108857600080fd5b61109489828a01610efb565b92509250509295509295509295565b6110ac8161133e565b82525050565b6110c36110be8261133e565b61139f565b82525050565b6110d281611350565b82525050565b6110e18161135c565b82525050565b6110f86110f38261135c565b6113b1565b82525050565b600061110a838561132d565b9350611117838584611390565b611120836113cd565b840190509392505050565b600061113860268361132d565b9150611143826113eb565b604082019050919050565b600061115b60348361132d565b91506111668261143a565b604082019050919050565b600061117e602e8361132d565b915061118982611489565b604082019050919050565b60006111a160208361132d565b91506111ac826114d8565b602082019050919050565b6111c081611386565b82525050565b60006111d282856110e7565b6020820191506111e282846110b2565b6014820191508190509392505050565b600060208201905061120760008301846110a3565b92915050565b600060208201905061122260008301846110c9565b92915050565b600060208201905061123d60008301846110d8565b92915050565b600060c082019050611258600083018a6110d8565b61126560208301896111b7565b61127260408301886111b7565b61127f60608301876111b7565b81810360808301526112928185876110fe565b90506112a160a08301846110a3565b98975050505050505050565b600060208201905081810360008301526112c68161112b565b9050919050565b600060208201905081810360008301526112e68161114e565b9050919050565b6000602082019050818103600083015261130681611171565b9050919050565b6000602082019050818103600083015261132681611194565b9050919050565b600082825260208201905092915050565b600061134982611366565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60006113aa826113bb565b9050919050565b6000819050919050565b60006113c6826113de565b9050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f7520646f206e6f7420686176652061636365737320746f2074686520646f60008201527f6d61696e206f662074686973207061636b616765000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61150a8161133e565b811461151557600080fd5b50565b6115218161135c565b811461152c57600080fd5b50565b61153881611386565b811461154357600080fd5b5056fea264697066735822122034140d06b6946f8ab63fbf4c8d870c54d62ddfe8547809fcca285e0bed98d63664736f6c63430008040033";

export class PolywrapRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PolywrapRegistrar> {
    return super.deploy(
      _registry,
      overrides || {}
    ) as Promise<PolywrapRegistrar>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): PolywrapRegistrar {
    return super.attach(address) as PolywrapRegistrar;
  }
  connect(signer: Signer): PolywrapRegistrar__factory {
    return super.connect(signer) as PolywrapRegistrar__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolywrapRegistrarInterface {
    return new utils.Interface(_abi) as PolywrapRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolywrapRegistrar {
    return new Contract(address, _abi, signerOrProvider) as PolywrapRegistrar;
  }
}
