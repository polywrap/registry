/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnershipBridgeLink,
  OwnershipBridgeLinkInterface,
} from "../OwnershipBridgeLink";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "blockchainName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeChainId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageOwnershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "receiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "relayOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayOwnershipGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
    ],
    name: "updateBlockchainName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
    ],
    name: "updateBridgeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeLink",
        type: "address",
      },
    ],
    name: "updateBridgeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
    ],
    name: "updatePackageOwnershipManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "updateRelayOwnershipGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type OwnershipBridgeLinkConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnershipBridgeLinkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnershipBridgeLink__factory extends ContractFactory {
  constructor(...args: OwnershipBridgeLinkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnershipBridgeLink> {
    return super.deploy(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    ) as Promise<OwnershipBridgeLink>;
  }
  getDeployTransaction(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    );
  }
  attach(address: string): OwnershipBridgeLink {
    return super.attach(address) as OwnershipBridgeLink;
  }
  connect(signer: Signer): OwnershipBridgeLink__factory {
    return super.connect(signer) as OwnershipBridgeLink__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipBridgeLinkInterface {
    return new utils.Interface(_abi) as OwnershipBridgeLinkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnershipBridgeLink {
    return new Contract(address, _abi, signerOrProvider) as OwnershipBridgeLink;
  }
}
