/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  VersionVerificationManager,
  VersionVerificationManagerInterface,
} from "../VersionVerificationManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "verifiedVersionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "patchNodeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "major",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "patch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    name: "VersionPublished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "sides",
        type: "bool[]",
      },
      {
        internalType: "bytes32",
        name: "patchNodeId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    name: "isValidProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "packageId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "patchNodeId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "majorVersion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minorVersion",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "patchVersion",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bool[]",
        name: "sides",
        type: "bool[]",
      },
    ],
    name: "publishVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "updateRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "updateVerificationRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verificationRootUpdater",
        type: "address",
      },
    ],
    name: "updateVerificationRootUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verificationRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verificationRootUpdater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200222a3803806200222a833981810160405281019062000037919062000595565b62000048816200004f60201b60201c565b5062000670565b600060019054906101000a900460ff168062000076575060008054906101000a900460ff16155b620000b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000af906200064e565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000109576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620001196200018060201b60201c565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156200017c5760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff1680620001a7575060008054906101000a900460ff16155b620001e9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e0906200064e565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200023a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200024a6200027f60201b60201c565b6200025a6200035e60201b60201c565b80156200027c5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620002a6575060008054906101000a900460ff16155b620002e8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002df906200064e565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000339576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156200035b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168062000385575060008054906101000a900460ff16155b620003c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003be906200064e565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000418576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620004386200042c6200045d60201b60201c565b6200046560201b60201c565b80156200045a5760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200055d8262000530565b9050919050565b6200056f8162000550565b81146200057b57600080fd5b50565b6000815190506200058f8162000564565b92915050565b600060208284031215620005ae57620005ad6200052b565b5b6000620005be848285016200057e565b91505092915050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600062000636602e83620005c7565b91506200064382620005d8565b604082019050919050565b60006020820190508181036000830152620006698162000627565b9050919050565b611baa80620006806000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610153578063b61d211b14610171578063c4d66de81461018f578063ce749723146101ab578063dcbc69b5146101c7578063f2fde38b146101f7576100b4565b80630d032de8146100b95780631a5da6c8146100d757806338a34cf6146100f357806343ed751d1461010f578063715018a61461012b5780637b10399914610135575b600080fd5b6100c1610213565b6040516100ce9190610eb2565b60405180910390f35b6100f160048036038101906100ec9190610f3f565b610219565b005b61010d60048036038101906101089190610f3f565b6102d9565b005b61012960048036038101906101249190610f98565b610399565b005b610133610401565b005b61013d610489565b60405161014a9190610fd4565b60405180910390f35b61015b6104af565b6040516101689190610fd4565b60405180910390f35b6101796104d9565b6040516101869190610fd4565b60405180910390f35b6101a960048036038101906101a49190610f3f565b6104ff565b005b6101c560048036038101906101c0919061132e565b610622565b005b6101e160048036038101906101dc9190611438565b61082d565b6040516101ee9190611502565b60405180910390f35b610211600480360381019061020c9190610f3f565b610855565b005b60675481565b61022161094d565b73ffffffffffffffffffffffffffffffffffffffff1661023f6104af565b73ffffffffffffffffffffffffffffffffffffffff1614610295576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028c9061157a565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102e161094d565b73ffffffffffffffffffffffffffffffffffffffff166102ff6104af565b73ffffffffffffffffffffffffffffffffffffffff1614610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c9061157a565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576103f661159a565b5b8060678190555050565b61040961094d565b73ffffffffffffffffffffffffffffffffffffffff166104276104af565b73ffffffffffffffffffffffffffffffffffffffff161461047d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104749061157a565b60405180910390fd5b6104876000610955565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff1680610525575060008054906101000a900460ff16155b610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055b9061163b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105b4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105bc610a1b565b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550801561061e5760008060016101000a81548160ff0219169083151502179055505b5050565b873373ffffffffffffffffffffffffffffffffffffffff1661064382610b04565b73ffffffffffffffffffffffffffffffffffffffff1614610699576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610690906116cd565b60405180910390fd5b60006106a58986610ba9565b90506106b5848483606754610c07565b6106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611739565b60405180910390fd5b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634dc1d99d8c8b8b8b8b6040518663ffffffff1660e01b81526004016107599594939291906117df565b6020604051808303816000875af1158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c919061184e565b9050808a146107e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d7906118ed565b60405180910390fd5b89828c7f5875b5d75244d9184a17c71dedfa3481a6b268409027ba8fb88b3d8098dc206b8c8c8c8c604051610818949392919061190d565b60405180910390a45050505050505050505050565b60008061083a8484610ba9565b905061084a868683606754610c07565b915050949350505050565b61085d61094d565b73ffffffffffffffffffffffffffffffffffffffff1661087b6104af565b73ffffffffffffffffffffffffffffffffffffffff16146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c89061157a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610941576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610938906119cb565b60405180910390fd5b61094a81610955565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610a41575060008054906101000a900460ff16155b610a80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a779061163b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ad0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610ad8610cd7565b610ae0610db0565b8015610b015760008060016101000a81548160ff0219169083151502179055505b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663427a94d4836040518263ffffffff1660e01b8152600401610b619190610eb2565b602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190611a00565b9050919050565b6000808383604051602001610bbe9190611a69565b60405160208183030381529060405280519060200120604051602001610be5929190611aa1565b6040516020818303038152906040528051906020012090508091505092915050565b60008083905060005b8651811015610cc8576000878281518110610c2e57610c2d611acd565b5b60200260200101519050868281518110610c4b57610c4a611acd565b5b602002602001015115610c88578083604051602001610c6b929190611aa1565b604051602081830303815290604052805190602001209250610cb4565b8281604051602001610c9b929190611aa1565b6040516020818303038152906040528051906020012092505b508080610cc090611b2b565b915050610c10565b50828114915050949350505050565b600060019054906101000a900460ff1680610cfd575060008054906101000a900460ff16155b610d3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d339061163b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d8c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610dad5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610dd6575060008054906101000a900460ff16155b610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c9061163b565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e65576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e75610e7061094d565b610955565b8015610e965760008060016101000a81548160ff0219169083151502179055505b50565b6000819050919050565b610eac81610e99565b82525050565b6000602082019050610ec76000830184610ea3565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0c82610ee1565b9050919050565b610f1c81610f01565b8114610f2757600080fd5b50565b600081359050610f3981610f13565b92915050565b600060208284031215610f5557610f54610ed7565b5b6000610f6384828501610f2a565b91505092915050565b610f7581610e99565b8114610f8057600080fd5b50565b600081359050610f9281610f6c565b92915050565b600060208284031215610fae57610fad610ed7565b5b6000610fbc84828501610f83565b91505092915050565b610fce81610f01565b82525050565b6000602082019050610fe96000830184610fc5565b92915050565b6000819050919050565b61100281610fef565b811461100d57600080fd5b50565b60008135905061101f81610ff9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110788261102f565b810181811067ffffffffffffffff8211171561109757611096611040565b5b80604052505050565b60006110aa610ecd565b90506110b6828261106f565b919050565b600067ffffffffffffffff8211156110d6576110d5611040565b5b6110df8261102f565b9050602081019050919050565b82818337600083830152505050565b600061110e611109846110bb565b6110a0565b90508281526020810184848401111561112a5761112961102a565b5b6111358482856110ec565b509392505050565b600082601f83011261115257611151611025565b5b81356111628482602086016110fb565b91505092915050565b600067ffffffffffffffff82111561118657611185611040565b5b602082029050602081019050919050565b600080fd5b60006111af6111aa8461116b565b6110a0565b905080838252602082019050602084028301858111156111d2576111d1611197565b5b835b818110156111fb57806111e78882610f83565b8452602084019350506020810190506111d4565b5050509392505050565b600082601f83011261121a57611219611025565b5b813561122a84826020860161119c565b91505092915050565b600067ffffffffffffffff82111561124e5761124d611040565b5b602082029050602081019050919050565b60008115159050919050565b6112748161125f565b811461127f57600080fd5b50565b6000813590506112918161126b565b92915050565b60006112aa6112a584611233565b6110a0565b905080838252602082019050602084028301858111156112cd576112cc611197565b5b835b818110156112f657806112e28882611282565b8452602084019350506020810190506112cf565b5050509392505050565b600082601f83011261131557611314611025565b5b8135611325848260208601611297565b91505092915050565b600080600080600080600080610100898b03121561134f5761134e610ed7565b5b600061135d8b828c01610f83565b985050602061136e8b828c01610f83565b975050604061137f8b828c01611010565b96505060606113908b828c01611010565b95505060806113a18b828c01611010565b94505060a089013567ffffffffffffffff8111156113c2576113c1610edc565b5b6113ce8b828c0161113d565b93505060c089013567ffffffffffffffff8111156113ef576113ee610edc565b5b6113fb8b828c01611205565b92505060e089013567ffffffffffffffff81111561141c5761141b610edc565b5b6114288b828c01611300565b9150509295985092959890939650565b6000806000806080858703121561145257611451610ed7565b5b600085013567ffffffffffffffff8111156114705761146f610edc565b5b61147c87828801611205565b945050602085013567ffffffffffffffff81111561149d5761149c610edc565b5b6114a987828801611300565b93505060406114ba87828801610f83565b925050606085013567ffffffffffffffff8111156114db576114da610edc565b5b6114e78782880161113d565b91505092959194509250565b6114fc8161125f565b82525050565b600060208201905061151760008301846114f3565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061156460208361151d565b915061156f8261152e565b602082019050919050565b6000602082019050818103600083015261159381611557565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611625602e8361151d565b9150611630826115c9565b604082019050919050565b6000602082019050818103600083015261165481611618565b9050919050565b7f596f7520646f206e6f7420686176652061636365737320746f2074686520646f60008201527f6d61696e206f662074686973207061636b616765000000000000000000000000602082015250565b60006116b760348361151d565b91506116c28261165b565b604082019050919050565b600060208201905081810360008301526116e6816116aa565b9050919050565b7f496e76616c69642070726f6f6600000000000000000000000000000000000000600082015250565b6000611723600d8361151d565b915061172e826116ed565b602082019050919050565b6000602082019050818103600083015261175281611716565b9050919050565b61176281610fef565b82525050565b600081519050919050565b60005b83811015611791578082015181840152602081019050611776565b838111156117a0576000848401525b50505050565b60006117b182611768565b6117bb818561151d565b93506117cb818560208601611773565b6117d48161102f565b840191505092915050565b600060a0820190506117f46000830188610ea3565b6118016020830187611759565b61180e6040830186611759565b61181b6060830185611759565b818103608083015261182d81846117a6565b90509695505050505050565b60008151905061184881610f6c565b92915050565b60006020828403121561186457611863610ed7565b5b600061187284828501611839565b91505092915050565b7f537570706c6965642070617463684e6f6465496420646f6573206e6f74206d6160008201527f746368207468652063616c63756c617465642070617463684e6f646549640000602082015250565b60006118d7603e8361151d565b91506118e28261187b565b604082019050919050565b60006020820190508181036000830152611906816118ca565b9050919050565b60006080820190506119226000830187611759565b61192f6020830186611759565b61193c6040830185611759565b818103606083015261194e81846117a6565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119b560268361151d565b91506119c082611959565b604082019050919050565b600060208201905081810360008301526119e4816119a8565b9050919050565b6000815190506119fa81610f13565b92915050565b600060208284031215611a1657611a15610ed7565b5b6000611a24848285016119eb565b91505092915050565b600081905092915050565b6000611a4382611768565b611a4d8185611a2d565b9350611a5d818560208601611773565b80840191505092915050565b6000611a758284611a38565b915081905092915050565b6000819050919050565b611a9b611a9682610e99565b611a80565b82525050565b6000611aad8285611a8a565b602082019150611abd8284611a8a565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b3682610fef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b6957611b68611afc565b5b60018201905091905056fea26469706673582212200c82b35f68892079432acf979e2070c7bcf20e67c3b4bc71289e4d011e8f9df264736f6c634300080a0033";

type VersionVerificationManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VersionVerificationManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VersionVerificationManager__factory extends ContractFactory {
  constructor(...args: VersionVerificationManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VersionVerificationManager> {
    return super.deploy(
      _registry,
      overrides || {}
    ) as Promise<VersionVerificationManager>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): VersionVerificationManager {
    return super.attach(address) as VersionVerificationManager;
  }
  connect(signer: Signer): VersionVerificationManager__factory {
    return super.connect(signer) as VersionVerificationManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VersionVerificationManagerInterface {
    return new utils.Interface(_abi) as VersionVerificationManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VersionVerificationManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VersionVerificationManager;
  }
}
