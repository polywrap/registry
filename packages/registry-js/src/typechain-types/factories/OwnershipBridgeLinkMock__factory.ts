/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OwnershipBridgeLinkMock,
  OwnershipBridgeLinkMockInterface,
} from "../OwnershipBridgeLinkMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "blockchainName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeChainId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridgeLink",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "packageOwnershipManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "receiveOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "domainRegistrar",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "domainRegistrarNode",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "relayOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayOwnershipGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_blockchainName",
        type: "bytes32",
      },
    ],
    name: "updateBlockchainName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "updateBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bridgeChainId",
        type: "bytes32",
      },
    ],
    name: "updateBridgeChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeLink",
        type: "address",
      },
    ],
    name: "updateBridgeLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_packageOwnershipManager",
        type: "address",
      },
    ],
    name: "updatePackageOwnershipManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_relayOwnershipGasLimit",
        type: "uint256",
      },
    ],
    name: "updateRelayOwnershipGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ccd38038062001ccd833981810160405281019062000037919062000677565b84848484846200005185858585856200006160201b60201c565b50505050505050505050620007a8565b600060019054906101000a900460ff168062000088575060008054906101000a900460ff16155b620000ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c19062000786565b60405180910390fd5b60008060019054906101000a900460ff1615905080156200011b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200012b620001ec60201b60201c565b85606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836068819055508260698190555081606a819055508015620001e45760008060016101000a81548160ff0219169083151502179055505b505050505050565b600060019054906101000a900460ff168062000213575060008054906101000a900460ff16155b62000255576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200024c9062000786565b60405180910390fd5b60008060019054906101000a900460ff161590508015620002a6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620002b6620002eb60201b60201c565b620002c6620003ca60201b60201c565b8015620002e85760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168062000312575060008054906101000a900460ff16155b62000354576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200034b9062000786565b60405180910390fd5b60008060019054906101000a900460ff161590508015620003a5576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620003c75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680620003f1575060008054906101000a900460ff16155b62000433576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200042a9062000786565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000484576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b620004a462000498620004c960201b60201c565b620004d160201b60201c565b8015620004c65760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005c9826200059c565b9050919050565b620005db81620005bc565b8114620005e757600080fd5b50565b600081519050620005fb81620005d0565b92915050565b6000819050919050565b620006168162000601565b81146200062257600080fd5b50565b60008151905062000636816200060b565b92915050565b6000819050919050565b62000651816200063c565b81146200065d57600080fd5b50565b600081519050620006718162000646565b92915050565b600080600080600060a0868803121562000696576200069562000597565b5b6000620006a688828901620005ea565b9550506020620006b988828901620005ea565b9450506040620006cc8882890162000625565b9350506060620006df8882890162000625565b9250506080620006f28882890162000660565b9150509295509295909350565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b60006200076e602e83620006ff565b91506200077b8262000710565b604082019050919050565b60006020820190508181036000830152620007a1816200075f565b9050919050565b61151580620007b86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063d788018111610071578063d788018114610281578063e78cea921461029d578063ec9f4e5c146102bb578063f2fde38b146102d7578063fbe972d8146102f357610116565b80638da5cb5b1461020b578063c97a51bd14610229578063cef79e2414610245578063cf9cdb251461026357610116565b80636eb38212116100e95780636eb382121461018d578063715018a6146101a957806372576767146101b357806373e7d117146101d157806375ec7627146101ef57610116565b80630d9f552e1461011b5780634c8d9af1146101375780635310b5611461015557806354576c2614610171575b600080fd5b61013560048036038101906101309190611054565b61030f565b005b61013f6103cf565b60405161014c9190611090565b60405180910390f35b61016f600480360381019061016a91906110e1565b6103f5565b005b61018b60048036038101906101869190611134565b6104ed565b005b6101a760048036038101906101a29190611054565b610573565b005b6101b1610633565b005b6101bb6106bb565b6040516101c89190611170565b60405180910390f35b6101d96106c1565b6040516101e691906111a4565b60405180910390f35b610209600480360381019061020491906111eb565b6106c7565b005b61021361074d565b6040516102209190611090565b60405180910390f35b610243600480360381019061023e9190611134565b610777565b005b61024d6107fd565b60405161025a9190611090565b60405180910390f35b61026b610823565b6040516102789190611170565b60405180910390f35b61029b600480360381019061029691906110e1565b610829565b005b6102a561091d565b6040516102b29190611090565b60405180910390f35b6102d560048036038101906102d09190611218565b610943565b005b6102f160048036038101906102ec9190611054565b610ac0565b005b61030d60048036038101906103089190611054565b610bb8565b005b610317610c78565b73ffffffffffffffffffffffffffffffffffffffff1661033561074d565b73ffffffffffffffffffffffffffffffffffffffff161461038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906112f0565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045357610452611310565b5b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e7da1cd66068548585856040518563ffffffff1660e01b81526004016104b6949392919061133f565b600060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b50505050505050565b6104f5610c78565b73ffffffffffffffffffffffffffffffffffffffff1661051361074d565b73ffffffffffffffffffffffffffffffffffffffff1614610569576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610560906112f0565b60405180910390fd5b8060688190555050565b61057b610c78565b73ffffffffffffffffffffffffffffffffffffffff1661059961074d565b73ffffffffffffffffffffffffffffffffffffffff16146105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e6906112f0565b60405180910390fd5b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61063b610c78565b73ffffffffffffffffffffffffffffffffffffffff1661065961074d565b73ffffffffffffffffffffffffffffffffffffffff16146106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906112f0565b60405180910390fd5b6106b96000610c80565b565b60685481565b606a5481565b6106cf610c78565b73ffffffffffffffffffffffffffffffffffffffff166106ed61074d565b73ffffffffffffffffffffffffffffffffffffffff1614610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a906112f0565b60405180910390fd5b80606a8190555050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61077f610c78565b73ffffffffffffffffffffffffffffffffffffffff1661079d61074d565b73ffffffffffffffffffffffffffffffffffffffff16146107f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ea906112f0565b60405180910390fd5b8060698190555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60695481565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088757610886611310565b5b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635310b5618484846040518463ffffffff1660e01b81526004016108e693929190611384565b600060405180830381600087803b15801561090057600080fd5b505af1158015610914573d6000803e3d6000fd5b50505050505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff1680610969575060008054906101000a900460ff16155b6109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f9061142d565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109f8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610a00610d46565b85606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836068819055508260698190555081606a819055508015610ab85760008060016101000a81548160ff0219169083151502179055505b505050505050565b610ac8610c78565b73ffffffffffffffffffffffffffffffffffffffff16610ae661074d565b73ffffffffffffffffffffffffffffffffffffffff1614610b3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b33906112f0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba3906114bf565b60405180910390fd5b610bb581610c80565b50565b610bc0610c78565b73ffffffffffffffffffffffffffffffffffffffff16610bde61074d565b73ffffffffffffffffffffffffffffffffffffffff1614610c34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2b906112f0565b60405180910390fd5b80606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610d6c575060008054906101000a900460ff16155b610dab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da29061142d565b60405180910390fd5b60008060019054906101000a900460ff161590508015610dfb576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e03610e2f565b610e0b610f08565b8015610e2c5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610e55575060008054906101000a900460ff16155b610e94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8b9061142d565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ee4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f055760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f2e575060008054906101000a900460ff16155b610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f649061142d565b60405180910390fd5b60008060019054906101000a900460ff161590508015610fbd576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610fcd610fc8610c78565b610c80565b8015610fee5760008060016101000a81548160ff0219169083151502179055505b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102182610ff6565b9050919050565b61103181611016565b811461103c57600080fd5b50565b60008135905061104e81611028565b92915050565b60006020828403121561106a57611069610ff1565b5b60006110788482850161103f565b91505092915050565b61108a81611016565b82525050565b60006020820190506110a56000830184611081565b92915050565b6000819050919050565b6110be816110ab565b81146110c957600080fd5b50565b6000813590506110db816110b5565b92915050565b6000806000606084860312156110fa576110f9610ff1565b5b6000611108868287016110cc565b9350506020611119868287016110cc565b925050604061112a8682870161103f565b9150509250925092565b60006020828403121561114a57611149610ff1565b5b6000611158848285016110cc565b91505092915050565b61116a816110ab565b82525050565b60006020820190506111856000830184611161565b92915050565b6000819050919050565b61119e8161118b565b82525050565b60006020820190506111b96000830184611195565b92915050565b6111c88161118b565b81146111d357600080fd5b50565b6000813590506111e5816111bf565b92915050565b60006020828403121561120157611200610ff1565b5b600061120f848285016111d6565b91505092915050565b600080600080600060a0868803121561123457611233610ff1565b5b60006112428882890161103f565b95505060206112538882890161103f565b9450506040611264888289016110cc565b9350506060611275888289016110cc565b9250506080611286888289016111d6565b9150509295509295909350565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006112da602083611293565b91506112e5826112a4565b602082019050919050565b60006020820190508181036000830152611309816112cd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006080820190506113546000830187611161565b6113616020830186611161565b61136e6040830185611161565b61137b6060830184611081565b95945050505050565b60006060820190506113996000830186611161565b6113a66020830185611161565b6113b36040830184611081565b949350505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611417602e83611293565b9150611422826113bb565b604082019050919050565b600060208201905081810360008301526114468161140a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114a9602683611293565b91506114b48261144d565b604082019050919050565b600060208201905081810360008301526114d88161149c565b905091905056fea2646970667358221220cf3940ed61dad6a4315be726f7855e3871036fb7d4bf7347897eaace7dc5b0ef64736f6c634300080a0033";

type OwnershipBridgeLinkMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnershipBridgeLinkMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnershipBridgeLinkMock__factory extends ContractFactory {
  constructor(...args: OwnershipBridgeLinkMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OwnershipBridgeLinkMock> {
    return super.deploy(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    ) as Promise<OwnershipBridgeLinkMock>;
  }
  getDeployTransaction(
    _bridge: string,
    _packageOwnershipManager: string,
    _blockchainName: BytesLike,
    _bridgeChainId: BytesLike,
    _relayOwnershipGasLimit: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _bridge,
      _packageOwnershipManager,
      _blockchainName,
      _bridgeChainId,
      _relayOwnershipGasLimit,
      overrides || {}
    );
  }
  attach(address: string): OwnershipBridgeLinkMock {
    return super.attach(address) as OwnershipBridgeLinkMock;
  }
  connect(signer: Signer): OwnershipBridgeLinkMock__factory {
    return super.connect(signer) as OwnershipBridgeLinkMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipBridgeLinkMockInterface {
    return new utils.Interface(_abi) as OwnershipBridgeLinkMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnershipBridgeLinkMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OwnershipBridgeLinkMock;
  }
}
